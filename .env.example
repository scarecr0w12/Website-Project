# =============================================================================
# System-Agnostic Environment Configuration
# This file provides comprehensive environment variable defaults for all deployment scenarios
# Copy to .env and customize for your specific environment
# =============================================================================

# =============================================================================
# SYSTEM CONFIGURATION - Platform Independent
# =============================================================================

# Project Configuration
COMPOSE_PROJECT_NAME=viral-content
VERSION=latest
NODE_ENV=production

# Timezone Configuration (system-agnostic)
TIMEZONE=UTC

# =============================================================================
# SERVICE PORT CONFIGURATION - Host System Agnostic
# =============================================================================

# Main Application Ports
PORT=3000
HTTP_PORT=80
HTTPS_PORT=443

# Service-specific Ports
ANALYTICS_PORT=3001
DEBUG_PORT=9229
DB_BROWSER_PORT=8080

# =============================================================================
# DOCKER CONFIGURATION - Platform Independent
# =============================================================================

# Volume Configuration (adjust paths for your system)
DATA_PATH=./data
CONTENT_PATH=./generated-content
LOGS_PATH=./logs
BACKUP_PATH=./backups
ANALYTICS_BACKUP_PATH=./backups/analytics

# Volume Type (for different storage backends)
VOLUME_TYPE=none

# Mount Consistency (for Mac/Windows performance)
MOUNT_CONSISTENCY=cached

# Development Configuration
CHOKIDAR_USEPOLLING=true
WATCHPACK_POLLING=true

# =============================================================================
# NETWORK CONFIGURATION - System Agnostic
# =============================================================================

# Internal Network Subnets (customize to avoid conflicts)
INTERNAL_SUBNET=172.20.0.0/16
INTERNAL_GATEWAY=172.20.0.1

ANALYTICS_SUBNET=172.21.0.0/16
ANALYTICS_GATEWAY=172.21.0.1

EXTERNAL_SUBNET=172.22.0.0/16
EXTERNAL_GATEWAY=172.22.0.1

DEV_SUBNET=172.25.0.0/16
DEV_GATEWAY=172.25.0.1

# =============================================================================
# LLM API CONFIGURATION - Platform Independent
# =============================================================================

# Application Settings
HOST=0.0.0.0

# OpenAI Compatible LLM API Settings
LLM_API_URL=https://api.openai.com/v1
LLM_API_KEY=your_api_key_here
LLM_MODEL=gpt-3.5-turbo
LLM_MAX_TOKENS=1500
LLM_TEMPERATURE=0.7

# =============================================================================
# CONTENT GENERATION - Environment Agnostic
# =============================================================================

# Content Generation Settings
CONTENT_GENERATION_ENABLED=true
CONTENT_GENERATION_INTERVAL=3600000
MAX_ARTICLES_PER_DAY=24
CONTENT_TOPICS=technology,lifestyle,health,finance,entertainment

# Scheduler Configuration
SCHEDULER_ENABLED=true
SCHEDULER_INTERVAL=1800000
HEALTH_CHECK_INTERVAL=300000

# Database Settings
DATABASE_PATH=./data/articles.db

# =============================================================================
# PERFORMANCE & ANALYTICS - Cross-Platform
# =============================================================================

# Analytics & Performance
ANALYTICS_ENABLED=true
PERFORMANCE_TRACKING=true

# Development vs Production settings
DEBUG=
LOG_LEVEL=info

# Security
API_RATE_LIMIT=1000
CORS_ORIGINS=*

# =============================================================================
# SECURITY CONFIGURATION - System Independent
# =============================================================================

# Admin Panel Configuration (change in production!)
ADMIN_ENABLED=true
ADMIN_PASSWORD=admin123
ADMIN_SESSION_SECRET=your-secret-key-here

# =============================================================================
# ENTERPRISE ANALYTICS - Multi-Platform Support
# =============================================================================

# Google Analytics
GOOGLE_ANALYTICS_ID=

# Salesforce Integration
SALESFORCE_CLIENT_ID=
SALESFORCE_CLIENT_SECRET=

# HubSpot Integration
HUBSPOT_API_KEY=

# Mixpanel Integration
MIXPANEL_PROJECT_TOKEN=

# =============================================================================
# ANALYTICS DATABASE - System Agnostic PostgreSQL
# =============================================================================

# PostgreSQL Configuration
POSTGRES_VERSION=15-alpine
ANALYTICS_DB_NAME=umami
ANALYTICS_DB_USER=umami
ANALYTICS_DB_PASSWORD=umami

# Umami Analytics
UMAMI_VERSION=postgresql-latest
ANALYTICS_APP_SECRET=replace-me-with-a-random-string
CLIENT_IP_HEADER=CF-Connecting-IP
DISABLE_TELEMETRY=1

# =============================================================================
# NGINX CONFIGURATION - Platform Independent
# =============================================================================

# Nginx Settings
NGINX_VERSION=1.25-alpine
NGINX_CONFIG_PATH=./nginx/nginx.conf
NGINX_WORKERS=auto
NGINX_CONNECTIONS=1024

# =============================================================================
# BACKUP CONFIGURATION - System Agnostic
# =============================================================================

# Backup Settings
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=7

# =============================================================================
# DEVELOPMENT TOOLS - Cross-Platform
# =============================================================================

# Database Browser
ADMINER_VERSION=4.8.1
ADMINER_DESIGN=hydra

# RSS Feed Sources (comma-separated)
RSS_FEEDS=https://feeds.feedburner.com/TechCrunch,https://rss.cnn.com/rss/edition.rss

# =============================================================================
# DEPLOYMENT TARGET EXAMPLES
# =============================================================================

# Uncomment the section that matches your deployment target:

# --- Local Development ---
# NODE_ENV=development
# LOG_LEVEL=debug
# DEBUG=viral-content:*
# CORS_ORIGINS=*

# --- Docker Desktop (Mac/Windows) ---
# MOUNT_CONSISTENCY=cached
# CHOKIDAR_USEPOLLING=true
# WATCHPACK_POLLING=true

# --- Linux Server ---
# MOUNT_CONSISTENCY=consistent
# CHOKIDAR_USEPOLLING=false

# --- Cloud Deployment (AWS/GCP/Azure) ---
# NODE_ENV=production
# LOG_LEVEL=warn
# CORS_ORIGINS=https://yourdomain.com
# BACKUP_PATH=/mnt/backups
# DATA_PATH=/mnt/data

# --- Kubernetes ---
# VOLUME_TYPE=hostPath
# DATA_PATH=/var/lib/viral-content/data
# BACKUP_PATH=/var/lib/viral-content/backups

# =============================================================================
# SECURITY NOTES
# =============================================================================

# IMPORTANT: In production environments:
# 1. Change all default passwords and secrets
# 2. Use Docker secrets or environment-specific secret management
# 3. Restrict CORS_ORIGINS to your actual domains
# 4. Use HTTPS with proper SSL certificates
# 5. Configure proper network access controls
# 6. Enable backup encryption for sensitive data
# 7. Use read-only filesystems where possible
# 8. Configure proper log rotation and retention
# 9. Monitor resource usage and set appropriate limits
# 10. Regular security updates for all container images
